!function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=33)}([function(e,t,r){"use strict";!function(){function e(e){this.object=e,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25;var t,r,n=this,o=0,i=0,a=1,s=new THREE.Vector3,c=!1;this.getPolarAngle=function(){return r},this.getAzimuthalAngle=function(){return t},this.rotateLeft=function(e){i-=e},this.rotateUp=function(e){o-=e},this.panLeft=function(){var e=new THREE.Vector3;return function(t){var r=this.object.matrix.elements;e.set(r[0],r[1],r[2]),e.multiplyScalar(-t),s.add(e)}}(),this.panUp=function(){var e=new THREE.Vector3;return function(t){var r=this.object.matrix.elements;e.set(r[4],r[5],r[6]),e.multiplyScalar(t),s.add(e)}}(),this.pan=function(e,t,r,o){if(n.object instanceof THREE.PerspectiveCamera){var i=n.object.position,a=i.clone().sub(n.target),s=a.length();s*=Math.tan(n.object.fov/2*Math.PI/180),n.panLeft(2*e*s/o),n.panUp(2*t*s/o)}else n.object instanceof THREE.OrthographicCamera?(n.panLeft(e*(n.object.right-n.object.left)/r),n.panUp(t*(n.object.top-n.object.bottom)/o)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")},this.dollyIn=function(e){n.object instanceof THREE.PerspectiveCamera?a/=e:n.object instanceof THREE.OrthographicCamera?(n.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*e)),n.object.updateProjectionMatrix(),c=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.dollyOut=function(e){n.object instanceof THREE.PerspectiveCamera?a*=e:n.object instanceof THREE.OrthographicCamera?(n.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/e)),n.object.updateProjectionMatrix(),c=!0):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.update=function(){var n=new THREE.Vector3,l=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0)),u=l.clone().inverse(),h=new THREE.Vector3,d=new THREE.Quaternion;return function(){var e=this.object.position;n.copy(e).sub(this.target),n.applyQuaternion(l),t=Math.atan2(n.x,n.z),r=Math.atan2(Math.sqrt(n.x*n.x+n.z*n.z),n.y),t+=i,r+=o,t=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,t)),r=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,r)),r=Math.max(1e-6,Math.min(Math.PI-1e-6,r));var m=n.length()*a;return m=Math.max(this.minDistance,Math.min(this.maxDistance,m)),this.target.add(s),n.x=m*Math.sin(r)*Math.sin(t),n.y=m*Math.cos(r),n.z=m*Math.sin(r)*Math.cos(t),n.applyQuaternion(u),e.copy(this.target).add(n),this.object.lookAt(this.target),!0===this.enableDamping?(i*=1-this.dampingFactor,o*=1-this.dampingFactor):(i=0,o=0),a=1,s.set(0,0,0),!!(c||h.distanceToSquared(this.object.position)>1e-6||8*(1-d.dot(this.object.quaternion))>1e-6)&&(h.copy(this.object.position),d.copy(this.object.quaternion),c=!1,!0)}}()}THREE.OrbitControls=function(t,r){function n(e,t){var r=E.domElement===document?E.domElement.body:E.domElement;v.pan(e,t,r.clientWidth,r.clientHeight)}function o(){return 2*Math.PI/60/60*E.autoRotateSpeed}function i(){return Math.pow(.95,E.zoomSpeed)}function a(e){if(!1!==E.enabled){if(e.preventDefault(),e.button===E.mouseButtons.ORBIT){if(!1===E.enableRotate)return;C=w.ROTATE,p.set(e.clientX,e.clientY)}else if(e.button===E.mouseButtons.ZOOM){if(!1===E.enableZoom)return;C=w.DOLLY,y.set(e.clientX,e.clientY)}else if(e.button===E.mouseButtons.PAN){if(!1===E.enablePan)return;C=w.PAN,b.set(e.clientX,e.clientY)}C!==w.NONE&&(document.addEventListener("mousemove",s,!1),document.addEventListener("mouseup",c,!1),E.dispatchEvent(U))}}function s(e){if(!1!==E.enabled){e.preventDefault();var t=E.domElement===document?E.domElement.body:E.domElement;if(C===w.ROTATE){if(!1===E.enableRotate)return;T.set(e.clientX,e.clientY),g.subVectors(T,p),v.rotateLeft(2*Math.PI*g.x/t.clientWidth*E.rotateSpeed),v.rotateUp(2*Math.PI*g.y/t.clientHeight*E.rotateSpeed),p.copy(T)}else if(C===w.DOLLY){if(!1===E.enableZoom)return;H.set(e.clientX,e.clientY),S.subVectors(H,y),S.y>0?v.dollyIn(i()):S.y<0&&v.dollyOut(i()),y.copy(H)}else if(C===w.PAN){if(!1===E.enablePan)return;R.set(e.clientX,e.clientY),x.subVectors(R,b),n(x.x,x.y),b.copy(R)}C!==w.NONE&&E.update()}}function c(){!1!==E.enabled&&(document.removeEventListener("mousemove",s,!1),document.removeEventListener("mouseup",c,!1),E.dispatchEvent(P),C=w.NONE)}function l(e){if(!1!==E.enabled&&!1!==E.enableZoom&&C===w.NONE){e.preventDefault(),e.stopPropagation();var t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail),t>0?v.dollyOut(i()):t<0&&v.dollyIn(i()),E.update(),E.dispatchEvent(U),E.dispatchEvent(P)}}function u(e){if(!1!==E.enabled&&!1!==E.enableKeys&&!1!==E.enablePan)switch(e.keyCode){case E.keys.UP:n(0,E.keyPanSpeed),E.update();break;case E.keys.BOTTOM:n(0,-E.keyPanSpeed),E.update();break;case E.keys.LEFT:n(E.keyPanSpeed,0),E.update();break;case E.keys.RIGHT:n(-E.keyPanSpeed,0),E.update()}}function h(e){if(!1!==E.enabled){switch(e.touches.length){case 1:if(!1===E.enableRotate)return;C=w.TOUCH_ROTATE,p.set(e.touches[0].pageX,e.touches[0].pageY);break;case 2:if(!1===E.enableZoom)return;C=w.TOUCH_DOLLY;var t=e.touches[0].pageX-e.touches[1].pageX,r=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+r*r);y.set(0,n);break;case 3:if(!1===E.enablePan)return;C=w.TOUCH_PAN,b.set(e.touches[0].pageX,e.touches[0].pageY);break;default:C=w.NONE}C!==w.NONE&&E.dispatchEvent(U)}}function d(e){if(!1!==E.enabled){e.preventDefault(),e.stopPropagation();var t=E.domElement===document?E.domElement.body:E.domElement;switch(e.touches.length){case 1:if(!1===E.enableRotate)return;if(C!==w.TOUCH_ROTATE)return;T.set(e.touches[0].pageX,e.touches[0].pageY),g.subVectors(T,p),v.rotateLeft(2*Math.PI*g.x/t.clientWidth*E.rotateSpeed),v.rotateUp(2*Math.PI*g.y/t.clientHeight*E.rotateSpeed),p.copy(T),E.update();break;case 2:if(!1===E.enableZoom)return;if(C!==w.TOUCH_DOLLY)return;var r=e.touches[0].pageX-e.touches[1].pageX,o=e.touches[0].pageY-e.touches[1].pageY,a=Math.sqrt(r*r+o*o);H.set(0,a),S.subVectors(H,y),S.y>0?v.dollyOut(i()):S.y<0&&v.dollyIn(i()),y.copy(H),E.update();break;case 3:if(!1===E.enablePan)return;if(C!==w.TOUCH_PAN)return;R.set(e.touches[0].pageX,e.touches[0].pageY),x.subVectors(R,b),n(x.x,x.y),b.copy(R),E.update();break;default:C=w.NONE}}}function m(){!1!==E.enabled&&(E.dispatchEvent(P),C=w.NONE)}function f(e){e.preventDefault()}var v=new e(t);this.domElement=void 0!==r?r:document,Object.defineProperty(this,"constraint",{get:function(){return v}}),this.getPolarAngle=function(){return v.getPolarAngle()},this.getAzimuthalAngle=function(){return v.getAzimuthalAngle()},this.enabled=!0,this.center=this.target,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};var E=this,p=new THREE.Vector2,T=new THREE.Vector2,g=new THREE.Vector2,b=new THREE.Vector2,R=new THREE.Vector2,x=new THREE.Vector2,y=new THREE.Vector2,H=new THREE.Vector2,S=new THREE.Vector2,w={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},C=w.NONE;this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom;var D={type:"change"},U={type:"start"},P={type:"end"};this.update=function(){this.autoRotate&&C===w.NONE&&v.rotateLeft(o()),!0===v.update()&&this.dispatchEvent(D)},this.reset=function(){C=w.NONE,this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(D),this.update()},this.dispose=function(){this.domElement.removeEventListener("contextmenu",f,!1),this.domElement.removeEventListener("mousedown",a,!1),this.domElement.removeEventListener("mousewheel",l,!1),this.domElement.removeEventListener("MozMousePixelScroll",l,!1),this.domElement.removeEventListener("touchstart",h,!1),this.domElement.removeEventListener("touchend",m,!1),this.domElement.removeEventListener("touchmove",d,!1),document.removeEventListener("mousemove",s,!1),document.removeEventListener("mouseup",c,!1),window.removeEventListener("keydown",u,!1)},this.domElement.addEventListener("contextmenu",f,!1),this.domElement.addEventListener("mousedown",a,!1),this.domElement.addEventListener("mousewheel",l,!1),this.domElement.addEventListener("MozMousePixelScroll",l,!1),this.domElement.addEventListener("touchstart",h,!1),this.domElement.addEventListener("touchend",m,!1),this.domElement.addEventListener("touchmove",d,!1),window.addEventListener("keydown",u,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,Object.defineProperties(THREE.OrbitControls.prototype,{object:{get:function(){return this.constraint.object}},target:{get:function(){return this.constraint.target},set:function(e){console.warn("THREE.OrbitControls: target is now immutable. Use target.set() instead."),this.constraint.target.copy(e)}},minDistance:{get:function(){return this.constraint.minDistance},set:function(e){this.constraint.minDistance=e}},maxDistance:{get:function(){return this.constraint.maxDistance},set:function(e){this.constraint.maxDistance=e}},minZoom:{get:function(){return this.constraint.minZoom},set:function(e){this.constraint.minZoom=e}},maxZoom:{get:function(){return this.constraint.maxZoom},set:function(e){this.constraint.maxZoom=e}},minPolarAngle:{get:function(){return this.constraint.minPolarAngle},set:function(e){this.constraint.minPolarAngle=e}},maxPolarAngle:{get:function(){return this.constraint.maxPolarAngle},set:function(e){this.constraint.maxPolarAngle=e}},minAzimuthAngle:{get:function(){return this.constraint.minAzimuthAngle},set:function(e){this.constraint.minAzimuthAngle=e}},maxAzimuthAngle:{get:function(){return this.constraint.maxAzimuthAngle},set:function(e){this.constraint.maxAzimuthAngle=e}},enableDamping:{get:function(){return this.constraint.enableDamping},set:function(e){this.constraint.enableDamping=e}},dampingFactor:{get:function(){return this.constraint.dampingFactor},set:function(e){this.constraint.dampingFactor=e}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.constraint.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.constraint.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.constraint.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.constraint.dampingFactor=e}}})}()},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(e){function t(){n(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),r=new THREE.LineBasicMaterial({color:16777215}),i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(-100,0,0),new THREE.Vector3(20,0,0),new THREE.Vector3(19,1,0),new THREE.Vector3(20,0,0),new THREE.Vector3(19,-1,0),new THREE.Vector3(20,0,0),new THREE.Vector3(100,0,0));var a=new THREE.Line(i,r);e.add(a);var i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(0,-100,0),new THREE.Vector3(0,20,0),new THREE.Vector3(1,19,0),new THREE.Vector3(0,20,0),new THREE.Vector3(-1,19,0),new THREE.Vector3(0,20,0),new THREE.Vector3(0,100,0));var a=new THREE.Line(i,r);e.add(a);var i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(0,0,-100),new THREE.Vector3(0,0,20),new THREE.Vector3(1,0,19),new THREE.Vector3(0,0,20),new THREE.Vector3(-1,0,19),new THREE.Vector3(0,0,20),new THREE.Vector3(0,0,100));var a=new THREE.Line(i,r);return e.add(a),e}return i(t,e),t}(THREE.Object3D);t.default=a},,,function(e,t,r){"use strict";THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var r=e.getPixelRatio(),n=Math.floor(e.context.canvas.width/r)||1,o=Math.floor(e.context.canvas.height/r)||1,i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};t=new THREE.WebGLRenderTarget(n,o,i)}this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var t,r,n=!1,o=this.passes.length;for(r=0;r<o;r++)if(t=this.passes[r],t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),t.needsSwap){if(n){var i=this.renderer.context;i.stencilFunc(i.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),i.stencilFunc(i.EQUAL,1,4294967295)}this.swapBuffers()}t instanceof THREE.MaskPass?n=!0:t instanceof THREE.ClearMaskPass&&(n=!1)}},reset:function(e){if(void 0===e){e=this.renderTarget1.clone();var t=this.renderer.getPixelRatio();e.width=Math.floor(this.renderer.context.canvas.width/t),e.height=Math.floor(this.renderer.context.canvas.height/t)}this.renderTarget1.dispose(),this.renderTarget1=e,this.renderTarget2.dispose(),this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t)}}},function(e,t,r){"use strict";THREE.MaskPass=function(e,t){this.scene=e,this.camera=t,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(e,t,r,n){var o=e.context;o.colorMask(!1,!1,!1,!1),o.depthMask(!1);var i,a;this.inverse?(i=0,a=1):(i=1,a=0),o.enable(o.STENCIL_TEST),o.stencilOp(o.REPLACE,o.REPLACE,o.REPLACE),o.stencilFunc(o.ALWAYS,i,4294967295),o.clearStencil(a),e.render(this.scene,this.camera,r,this.clear),e.render(this.scene,this.camera,t,this.clear),o.colorMask(!0,!0,!0,!0),o.depthMask(!0),o.stencilFunc(o.EQUAL,1,4294967295),o.stencilOp(o.KEEP,o.KEEP,o.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(e,t,r,n){var o=e.context;o.disable(o.STENCIL_TEST)}}},function(e,t,r){"use strict";THREE.RenderPass=function(e,t,r,n,o){this.scene=e,this.camera=t,this.overrideMaterial=r,this.clearColor=n,this.clearAlpha=void 0!==o?o:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(e,t,r,n){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,r,this.clear),this.clearColor&&e.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}}},function(e,t,r){"use strict";THREE.ShaderPass=function(e,t){this.textureID=void 0!==t?t:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.ShaderPass.prototype={render:function(e,t,r,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}},function(e,t,r){"use strict";THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},,,,function(e,t,r){"use strict";THREE.BloomPass=function(e,t,r,n){e=void 0!==e?e:1,t=void 0!==t?t:25,r=void 0!==r?r:4,n=void 0!==n?n:256;var o={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(n,n,o),this.renderTargetY=new THREE.WebGLRenderTarget(n,n,o),void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var i=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(i.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0}),void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");var a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms),this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(r),this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:t.toFixed(1),KERNEL_SIZE_INT:t.toFixed(0)}}),this.enabled=!0,this.needsSwap=!1,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.BloomPass.prototype={render:function(e,t,r,n,o){o&&e.context.disable(e.context.STENCIL_TEST),this.quad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=r,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,e.render(this.scene,this.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY,e.render(this.scene,this.camera,this.renderTargetY,!0),this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY,o&&e.context.enable(e.context.STENCIL_TEST),e.render(this.scene,this.camera,r,this.clear)}},THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0),THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125)},function(e,t,r){"use strict";THREE.BokehPass=function(e,t,r){this.scene=e,this.camera=t;var n=void 0!==r.focus?r.focus:1,o=void 0!==r.aspect?r.aspect:t.aspect,i=void 0!==r.aperture?r.aperture:.025,a=void 0!==r.maxblur?r.maxblur:1,s=r.width||window.innerWidth||1,c=r.height||window.innerHeight||1;this.renderTargetColor=new THREE.WebGLRenderTarget(s,c,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat}),this.renderTargetDepth=this.renderTargetColor.clone(),this.materialDepth=new THREE.MeshDepthMaterial,void 0===THREE.BokehShader&&console.error("THREE.BokehPass relies on THREE.BokehShader");var l=THREE.BokehShader,u=THREE.UniformsUtils.clone(l.uniforms);u.tDepth.value=this.renderTargetDepth,u.focus.value=n,u.aspect.value=o,u.aperture.value=i,u.maxblur.value=a,this.materialBokeh=new THREE.ShaderMaterial({uniforms:u,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}),this.uniforms=u,this.enabled=!0,this.needsSwap=!1,this.renderToScreen=!1,this.clear=!1,this.camera2=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene2=new THREE.Scene,this.quad2=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene2.add(this.quad2)},THREE.BokehPass.prototype={render:function(e,t,r,n,o){this.quad2.material=this.materialBokeh,this.scene.overrideMaterial=this.materialDepth,e.render(this.scene,this.camera,this.renderTargetDepth,!0),this.uniforms.tColor.value=r,this.renderToScreen?e.render(this.scene2,this.camera2):e.render(this.scene2,this.camera2,t,this.clear),this.scene.overrideMaterial=null}}},function(e,t,r){"use strict";THREE.DotScreenPass=function(e,t,r){void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var n=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(n.uniforms),void 0!==e&&this.uniforms.center.value.copy(e),void 0!==t&&(this.uniforms.angle.value=t),void 0!==r&&(this.uniforms.scale.value=r),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.DotScreenPass.prototype={render:function(e,t,r,n){this.uniforms.tDiffuse.value=r,this.uniforms.tSize.value.set(r.width,r.height),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}}},function(e,t,r){"use strict";THREE.FilmPass=function(e,t,r,n){void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var o=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(o.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),void 0!==n&&(this.uniforms.grayscale.value=n),void 0!==e&&(this.uniforms.nIntensity.value=e),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==r&&(this.uniforms.sCount.value=r),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.FilmPass.prototype={render:function(e,t,r,n){this.uniforms.tDiffuse.value=r,this.uniforms.time.value+=n,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}}},function(e,t,r){"use strict";THREE.TexturePass=function(e,t){void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var r=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(r.uniforms),this.uniforms.opacity.value=void 0!==t?t:1,this.uniforms.tDiffuse.value=e,this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader}),this.enabled=!0,this.needsSwap=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.TexturePass.prototype={render:function(e,t,r,n){this.quad.material=this.material,e.render(this.scene,this.camera,r)}}},,function(e,t,r){"use strict";THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:.025},maxblur:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColor;","uniform sampler2D tDepth;","uniform float maxblur;","uniform float aperture;","uniform float focus;","uniform float aspect;","void main() {","vec2 aspectcorrect = vec2( 1.0, aspect );","vec4 depth1 = texture2D( tDepth, vUv );","float factor = depth1.x - focus;","vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );","vec2 dofblur9 = dofblur * 0.9;","vec2 dofblur7 = dofblur * 0.7;","vec2 dofblur4 = dofblur * 0.4;","vec4 col = vec4( 0.0 );","col += texture2D( tColor, vUv.xy );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );","col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );","gl_FragColor = col / 41.0;","gl_FragColor.a = 1.0;","}"].join("\n")}},function(e,t,r){"use strict";THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){var t,r,n,o,i=2*Math.ceil(3*e)+1;for(i>25&&(i=25),o=.5*(i-1),r=new Array(i),n=0,t=0;t<i;++t)r[t]=function(e,t){return Math.exp(-e*e/(2*t*t))}(t-o,e),n+=r[t];for(t=0;t<i;++t)r[t]/=n;return r}}},function(e,t,r){"use strict";THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(.5,.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")}},function(e,t,r){"use strict";THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;","vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;","vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );","vec3 rgbM  = rgbaM.xyz;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec4 rgbA = (1.0/2.0) * (","texture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (1.0/3.0 - 0.5)) +","texture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (2.0/3.0 - 0.5)));","vec4 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (","texture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (0.0/3.0 - 0.5)) +","texture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (3.0/3.0 - 0.5)));","float lumaB = dot(rgbB, vec4(luma, 0.0));","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","gl_FragColor = rgbA;","} else {","gl_FragColor = rgbB;","}","}"].join("\n")}},function(e,t,r){"use strict";THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float x = vUv.x * vUv.y * time *  1000.0;","x = mod( x, 13.0 ) * mod( x, 123.0 );","float dx = mod( x, 0.01 );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")}},function(e,t,r){"use strict";THREE.ToneMapShader={uniforms:{tDiffuse:{type:"t",value:null},averageLuminance:{type:"f",value:1},luminanceMap:{type:"t",value:null},maxLuminance:{type:"f",value:16},middleGrey:{type:"f",value:.6}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","varying vec2 vUv;","uniform float middleGrey;","uniform float maxLuminance;","#ifdef ADAPTED_LUMINANCE","uniform sampler2D luminanceMap;","#else","uniform float averageLuminance;","#endif","const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);","vec3 ToneMap( vec3 vColor ) {","#ifdef ADAPTED_LUMINANCE","float fLumAvg = texture2D(luminanceMap, vec2(0.5, 0.5)).r;","#else","float fLumAvg = averageLuminance;","#endif","float fLumPixel = dot(vColor, LUM_CONVERT);","float fLumScaled = (fLumPixel * middleGrey) / fLumAvg;","float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (maxLuminance * maxLuminance)))) / (1.0 + fLumScaled);","return fLumCompressed * vColor;","}","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );","}"].join("\n")}},function(e,t,r){"use strict";THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float offset;","uniform float darkness;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );","gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );","}"].join("\n")}},,,,,,,,,function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=r(1),a=function(e){return e&&e.__esModule?e:{default:e}}(i);r(0),r(8),r(23),r(18),r(21),r(24),r(19),r(20),r(22),r(7),r(5),r(6),r(13),r(16),r(14),r(12),r(15),r(4),new(function(){function e(){n(this,e),this.animate=this.animate.bind(this),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.renderer=new THREE.WebGLRenderer,this.renderer.setClearColor(0),this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.renderer.domElement.addEventListener("click",this.onMouseClick),this.initScene(),this.initPostprocessing(),this.animate()}return o(e,[{key:"initScene",value:function(){var e=new THREE.BoxGeometry(3,3,3),t=new THREE.MeshBasicMaterial({color:65280});this.cube=new THREE.Mesh(e,t),this.scene.add(this.cube),this.scene.add(new a.default),this.camera.position.set(1,1,30),this.camera.degree=0;var r=new THREE.DirectionalLight(16777215,1);r.position.set(0,0,10),this.scene.add(r)}},{key:"initPostprocessing",value:function(){this.composer=new THREE.EffectComposer(this.renderer),this.composer.addPass(new THREE.RenderPass(this.scene,this.camera));var e=new THREE.BloomPass;this.composer.addPass(e);var t=new THREE.ShaderPass(THREE.CopyShader);t.renderToScreen=!0,this.composer.addPass(t)}},{key:"animate",value:function(){requestAnimationFrame(this.animate),this.renderer.render(this.scene,this.camera)}}]),e}())}]);